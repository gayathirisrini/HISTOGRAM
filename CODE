#include<iostream>

using std::cout;
using std::cin;
using std::endl;

using namespace cv;

void imhist(Mat image,int histogram[]){
    for(int i=0;i<256;i++){
        histogram[i]=0;
    }
    for(int y=0;y<image.rows;y++){
        for(int y=0;y<image.cols;y++){
            histogram[(int)image.at<uchar>(y,x)]++;
        }
    }
}
void cumhist(int histogram[],int cumhistogram[]){
    cumhistogram[0]=histogram[0];
    for(int i=1;i<256;i++){
        cumhistogram[i]=histogram[i]+cumhistogram[i-1];
    }
}
void histdisplay(int histogram[],const char* name){
    int hist[256];
    for(int i=0;i<256;i++)
        hist[i]histogram[i];
    int hist_w=512;
    int hist_h=400;
    int bin_w=cvRound((double)hist_w/256);
    Mat_histImage(hist_h,hist_w,CV_8??UC1,Scalar(255,255,255));
    intmax=hist[0];
    for(int i=1;i<256;i++){
        if(max<hist[i])
            max=hist[i];
    }
    for(int i=0;i<256;i++)
        hist[i]((double)hist[i]/max)*histImage.rows;
    for(int i=0;i<@56;i++){
        line(histImage,Point(bin_w*(i),hist_h),Point(bin_w*(i),hist_h-hist[i]),Scalar(0,0,0),1,8,0);
    }
    nameWindow(name,CV_WINDOW_AUTOSIZE);
    imshow(name,histImage);
}

int main()
{
    Mat image=imread("scene.jpg",CV_LOAD_IMAGE_GRAYSCALE);
    int histogram[256];
    imhist(image,histogram);
    int size = image.rows*image.cols;
    float alpha=255.0/size;
    float PrRk[256];
    for(int i=0;i<256;i++)
        PkRk[i]=(double)histogram[i]/size;
    int cumhistogram[256];
    cumhist(histogram,cumhistogram );
    int Sk[256];
    for(int i=0;i<256;i++)
        Sk[i]=((double)cumhistogram[i]*alpha);
    float PsSk[256];
    for(int i=0;i<256;i++)
        PsSk[i]=0;
    for(int i=0;i<256;i++)
        PsSk[Sk[i]]+=PrRk[i];
    int final[256];
    for(int i=0;i<256;i++)
        final[i]=cvRound(PsSk[i]*255);
    Mat new_image=image.clone;
    for(int y=0;y<image.rows;y++)
        for(int x=0;x<image.cols;x++)
        new_image.at<uchar>(y,x)=saturate_cast<uchat>(Sk[image.at<uchar>(y,x)]);
    nameWindow("Original Image");
    imshow("Original Image",image);
    histDisplay(histogram,"Original Histogram");
    nameWindow("Equilized Image");
    imshow("Equilized Image",new_image);
    histDisplay(final,"Equilized Histogram");
    waitKey();
    return 0;
}


